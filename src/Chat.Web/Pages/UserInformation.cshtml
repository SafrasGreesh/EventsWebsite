@page
@model UserInformationModel
@{
    ViewData["Title"] = "UserInformation";
}

<body>
    <div class="container my-4">
        <h3>Ваш профиль:</h3>
        <div class="row">
            <div class="col-md-4 mb-3 mb-md-0">
                <img src="" class="card-img-top" alt="Фотография пользователя">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h5 class="card-text" id="username" name="username" value="" readonly></h5>
                  
                    <p class="card-text">Возраст: <span id="user-age" value=""></span></p>
                    <p class="card-text">Город: <span id="user-city" value=""></span></p>
                    <p class="card-text">Описание: <span id="user-description" value=""></span></p>
                    <a href="/UserSettings" class="btn btn-primary">Изменить профиль</a>
                </div>
            </div>
        </div>
    </div>
    <h3>Параметры поиска:</h3>
    <form>
        <div class="form-group">
            <label for="age-min">Возраст:</label>
            <div class="d-flex">
                <input type="range" class="form-control-range mr-3" id="age-min" min="18" max="99" value="18">
                <input type="range" class="form-control-range" id="age-max" min="19" max="100" value="100">
            </div>
            <div class="d-flex justify-content-between">
                <small>От: <span id="age-min-value">18</span></small>
                <small>До: <span id="age-max-value">100</span></small>
            </div>
        </div>
        <div class="form-group d-flex align-items-center">
            <p class="card-text mb-0 mr-3">Город: <span id="user-city-2"></span></p>
        </div>
        <div class="form-group">
            <label for="gender">Пол:</label>
            <select class="form-control" id="gender">
                
                <option value="A">Любой</option>
                <option value="M">Мужской</option>
                <option value="W">Женский</option>
                
            </select>
        </div>
        <button type="button" class="btn btn-primary" id="saveBtn">Сохранить</button>
        @*<button type="submit" class="btn btn-primary">Сохранить</button>*@
    </form>

    <script src="~/js/page.js"></script>
   
    <script>
        const user = {
            name: "Иван Иванов",
            age: 30,
            city: "Москва",
            photo: "https://via.placeholder.com/150",
            description: "Привет, я Иван, люблю путешествовать и заниматься спортом"
        };

        fetch('/users/id')
            .then(response => response.json())
            .then(user => {
                userData = user; // Сохраняем данные пользователя в переменную
                 //Заполнить поля на странице данными пользователя
                document.getElementById("username").textContent = user.name;
                document.getElementById("user-city").textContent = user.city;
                document.getElementById("user-age").textContent = calculateAge(user.birthDate);
                document.getElementById("user-description").textContent = user.description;
            })
            .catch(error => console.error(error));


        const photoElement = document.querySelector(".card-img-top");
        photoElement.src = user.photo;
        photoElement.style.maxHeight = "300px";
        photoElement.style.objectFit = "cover";

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                alert("Ваш браузер не поддерживает Geolocation API");
            }
        }

        function showPosition(position) {
            const latitude = position.coords.latitude;
            const longitude = position.coords.longitude;


            // Вызов API для определения города по координатам
            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=77f5249cba8eae9acece89f6091c7fe2&lang=ru`)
                .then(response => response.json())
                .then(data => {
                    const city = data.name;
                    const cityElement = document.querySelector("#user-city-2");
                    cityElement.innerText = city;
                })
                .catch(error => {
                    console.error("Ошибка при получении данных:", error);
                    alert("Не удалось получить местоположение. Попробуйте позже");
                });
        }
        //getLocation();
        const ageMinElement = document.querySelector("#age-min");
        const ageMaxElement = document.querySelector("#age-max");
        const ageMinValueElement = document.querySelector("#age-min-value");
        const ageMaxValueElement = document.querySelector("#age-max-value");
        

        fetch('/users/idOptions')
            .then(response => response.json())
            .then(options => {
                // Заполнить поля на странице данными пользователя
                ageMinElement.value = options.ageMin;
                ageMinValueElement.innerText =  options.ageMin;
                ageMaxElement.value = options.ageMax;
                ageMaxValueElement.innerText = options.ageMax;
                document.getElementById("gender").value = options.gender;
                if (options.city != "") {
                    document.querySelector("#user-city-2").innerText = options.city;
                }
                else{
                    getLocation();
                }

            })
            .catch(error => console.error(error));



        ageMinElement.addEventListener("input", function () {
            ageMinValueElement.innerText = ageMinElement.value;
            ageMaxElement.min = ageMinElement.value;
            if (Number(ageMaxElement.value) < Number(ageMinElement.value)) {
                ageMaxElement.value = ageMinElement.value;
                ageMaxValueElement.innerText = ageMinElement.value;
            }
        });

        ageMaxElement.addEventListener("input", function () {
            ageMaxValueElement.innerText = ageMaxElement.value;
            ageMinElement.max = ageMaxElement.value;
            if (Number(ageMinElement.value) > Number(ageMaxElement.value)) {
                ageMinElement.value = ageMaxElement.value;
                ageMinValueElement.innerText = ageMaxElement.value;
            }
        });

        // Установка начальных значений
        ageMinValueElement.innerText = ageMinElement.value;
        ageMaxValueElement.innerText = ageMaxElement.value;


        var saveBtn = document.querySelector('button#saveBtn');

        saveBtn.addEventListener('click', function () {
            // отправить измененные данные на сервер или сохранить их локально
            // ...
            //var id = 0;
            
            var ageMin = ageMinElement.value;
            var ageMax = ageMaxElement.value;
            var gender = document.getElementById('gender').value;
            var city = document.getElementById('user-city-2').textContent;
            //var birthDate = document.getElementById("birthdate").value;
            //var description = document.getElementById("description").value;

            // Создать объект с данными пользователя
            var userData = {
                Id: 0,
                ageMin: ageMin,
                ageMax: ageMax,
                gender: gender,
                city: city
            };

            // Отправить данные на сервер в POST-запросе
            $.post({
                url: '/users/updateOptions', // Здесь указывается URL-путь для обработки регистрации на сервере
                contentType: 'application/json',
                data: JSON.stringify(userData),
                success: function (response) {
                    // Обработка успешного ответа сервера после регистрации
                    console.log(response);
                    alert('Обновление данных прошло успешно');
                    //window.location.href = "home";
                    // Дополнительные действия, например, перенаправление на другую страницу
                },
                error: function (xhr, status, error) {
                    // Обработка ошибки при регистрации
                    console.log(xhr.responseText);
                    alert('Ошибка обновления');
                }
            });

        });
    </script>
</body>
